---
################################################################
### BUILDING STACK 
#### NETWORK CONFIG FOR 

version: "3.7"
networks:
  frontend:
  name: frontend
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
  backend:
  name: backend
    ipam:
      driver: default
      config:
        - subnet: 172.20.1.0/24
  default:
    driver: default
services:

  # portainer:
  #   image: portainer/portainer-ce
  #   container_name: portainer
  #   hostname: portainer
  #   networks:
  #     frontend:
  #       ipv4_address: 172.20.0.2
  #   ports:
  #     - 9000:9000
  #     - 8000:8000
  #   restart: always
  #   command: -H unix:///var/run/docker.sock
  #   environment:
  #     - TZ=America/Chicago
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ${CONTAINERS}/portainer:/data

  portainer_agent:
    image: portainer/agent
    container_name: portainer-agent
    networks:
      frontend:
        ipv4_address: 172.20.0.3
    ports:
      - 9001:9001
    environment:
      - TZ=America/Chicago
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host
    restart: always

  amd:
    image: randomninjaatk/amd 
    container_name: amd
    volumes:
      - ${CONTAINERS}/amd:/config
      - ${DATA}/torrents:/downloads-amd
    environment:
      - PUID=1000
      - PGID=${PGID}
      - AUTOSTART=true
      - SCRIPTINTERVAL=1h
      - DOWNLOADMODE=wanted
      - FALLBACKSEARCH=True
      - LIST=both
      - SearchType=both
      - Concurrency=1
      - EMBEDDED_COVER_QUALITY=80
      - FORMAT=FLAC
      - BITRATE=320
      - ENABLEPOSTPROCESSING=true
      - FORCECONVERT=false
      - requirequality=false
      - MatchDistance=10
      - replaygain=true
      - FolderPermissions=766
      - FilePermissions=666
      - MBRAINZMIRROR=https://musicbrainz.org
      - MBRATELIMIT=1
      - LidarrUrl=http://192.168.1.125:8686
      - LidarrAPIkey=${LIDAR_API_KEY}
      - ARL_TOKEN=${ARL_TOKEN}
      # - NOTIFYPLEX=false
      # - PLEXLIBRARYNAME=Music
      # - PLEXURL=http://x.x.x.x:8686
      # - PLEXTOKEN=plextoken
      - ALBUM_TYPE_FILTER=COMPILE
      - POSTPROCESSTHREADS=1
    restart: unless-stopped

  lidarr:
    container_name: lidarr
    image: hotio/lidarr
    hostname: lidarr
    networks: 
      frontend:
        ipv4_address: 172.20.0.4
    ports:
      - 8686:8686
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=1000
      - PGID=${PGID}
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - ${CONTAINERS}/lidarr:/config
      # - ${DOWNLOADS}/torrents:/data
      - ${DATA}:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  bazarr:
    image: hotio/bazarr
    container_name: bazarr
    hostname: bazarr
    networks:
      frontend:
        ipv4_address: 172.20.0.5
    security_opt:
      - no-new-privileges:true
    ports:
      - 6767:6767
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/bazarr:/config
      - ${DATA}/media:/data/media
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    hostname: prowlarr
    image: hotio/prowlarr:testing
    networks:
      frontend:
        ipv4_address: 172.20.0.6
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
    volumes:
      - ${CONTAINERS}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  jackett:
    container_name: jackett
    hostname: jackett
    image: hotio/jackett
    networks: 
      frontend:
        ipv4_address: 172.20.0.7
    ports:
      - 9117:9117
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
      - UMASK=002
    volumes:
      - ${CONTAINERS}/jackett:/config
      - /etc/localtime:/etc/localtime
      - ${CONTAINERS}/jackett/empty:/downloads
    restart: unless-stopped

  sonarr:
    image: hotio/sonarr
    container_name: sonarr
    hostname: sonarr
    networks:
      frontend:
        ipv4_address: 172.20.0.8
    security_opt:
      - no-new-privileges:true
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${CONTAINERS}/sonarr:/config
      - ${DATA}:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"
    
  radarr:
    image: hotio/radarr
    container_name: radarr
    hostname: radarr
    networks:
      frontend:
        ipv4_address: 172.20.0.9
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=${PGID}
      - UMASK=002
    volumes:
      - ${CONTAINERS}/radarr:/config
      - ${DATA}:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  readarr:
    image: hotio/readarr:nightly
    container_name: readarr
    hostname: readarr
    networks:
      frontend:
        ipv4_address: 172.20.0.10
    security_opt:
      - no-new-privileges:true
    ports:
      - 8787:8787
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/readarr:/config
      - ${DATA}:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  readarr-audio-books:
    image: hotio/readarr:nightly
    container_name: readarr-audio-books
    hostname: readarr
    networks:
      frontend:
        ipv4_address: 172.20.0.11
    security_opt:
      - no-new-privileges:true
    ports:
      - 8786:8787
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/readarr-audio-books:/config
      - ${DATA}:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"
### Request media
  ombi:
    image: hotio/ombi:latest
    container_name: ombi
    hostname: ombi
    networks:
      frontend:
        ipv4_address: 172.20.0.12
    security_opt:
      - no-new-privileges:true
    ports:
      - 5003:5000
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/ombi:/config
      - ${DATA}:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  flaresolverr:
    image: flaresolverr/flaresolverr 
    container_name: flaresolverr
    hostname: flaresolverr
    environment:
#      - CAPTCHA_SOLVER=hcaptcha-solver
      - TZ=${TZ}
#       - LOG_LEVEL=info
#       - LOG_HTML=false
    ports:
      - 8191:8191
    logging: 
      driver: json-file
      options: 
        max-file: 5
        max-size: 5m
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONTAINERS}/flaresolver:/storage
      
  nzbhydra2:
    container_name: nzbhydra2
    hostname: nzbhydra2
    image: hotio/nzbhydra2
    networks: 
      frontend:
        ipv4_address: 172.20.0.13
    security_opt:
      - no-new-privileges:true
    ports:
      - 5076:5076
    environment:
      - PUID=1000
      - PGID=${PGID}
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - ${CONTAINERS}/nzbhydra2:/config
      - ${DATA}/usenet:/data/usnet
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  sabnzbd:
    image: hotio/sabnzbd
    container_name: sabnzbd
    hostname: sabnzbd
    networks:
      frontend:
        ipv4_address: 172.20.0.14
    security_opt:
      - no-new-privileges:true
    ports:
      - 9050:8080
      - 9051:9090
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/sabnzbd:/config
      - ${DATA}/usenet:/data/usenet
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    hostname: calibre-web
    networks:
      frontend:
        ipv4_address: 172.20.0.15
    ports:
      - 8083:8083
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - ${CONTAINERS}/calibre-web:/config
      - ${DATA}/media/books:/data/media/books
    restart: unless-stopped

  # Heimdall - Unified Frontend Alternative
  # Putting all services behind Oragnizr slows things down.
  heimdall:
    container_name: heimdall
    hostname: heimdall
    image: linuxserver/heimdall:latest
    restart: unless-stopped
    networks:
      frontend:
        ipv4_address: 172.20.0.16
    security_opt:
      - no-new-privileges:true
    ports:
      - 82:80
      - 10443:443
    volumes:
      - ${CONTAINERS}/heimdall:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  lazylibrarian:
    image: ghcr.io/linuxserver/lazylibrarian
    container_name: lazylibrarian
    hostname: lazylibrarian
    networks: 
      frontend:
        ipv4_address: 172.20.0.17
    security_opt:
      - no-new-privileges:true 
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - ${CONTAINERS}/lazylibrarian:/config
      - ${DOWNLOADS}/lazylibrarian/empty:/downloads
      - ${DATA}/media/books:/data/media/books
   #   - /path/to/data/:/books #optional
    ports:
      - 5299:5299
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: "5m"

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    networks:
      backend:
        ipv4_address: 172.20.1.2
    ports:
      - 9983:80
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/filebrowser:/config
    restart: unless-stopped

  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    networks:
      backend:
        ipv4_address: 172.20.1.3
    ports:
      - 8200:8200
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/duplicati:/config
      - ${CONTAINERS}/duplicati/backups:/backups
      - /:/source
    restart: unless-stopped

  jellyfin:
    container_name: jellyfin
    hostname: jellyfin
    image: ghcr.io/linuxserver/jellyfin
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
      - JellyfinPublishedURL=http://192.168.1.125:8096
    networks:
      frontend:
        ipv4_address: 172.20.0.128
    ports:
      - 8096:8096
      - 8920:8920
      - 1900:1900/udp
      - 7359:7359/udp
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - ${CONTAINERS}/jellyfin:/config
      # - ${CONTAINERS}/jellyfin:/config/cache
      # - ${CONTAINERS}/jellyfin:/config/data
      # - ${CONTAINERS}/jellyfin:/config/metadata
      - ${DATA}/media:/data/media
    restart: unless-stopped

  bookstack:
    image: linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DB_HOST=mariadb
      - DB_USER=bookstack
      - DB_PASS=${MYSQL_DB_PASSWORD}
      - DB_DATABASE=bookstack_db
    volumes:
      - ${CONTAINERS}/bookstack/data:/config
    ports:
      - 18081:80
    networks:
      frontend:
        ipv4_address: 172.20.0.18
    restart: unless-stopped
    depends_on:
      - mariadb
      
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    hostname: mariadb
    ports:
      - "3306:3306"
    networks:
      backend:
        ipv4_address: 172.20.1.240
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_DATABASE=bookstack_db
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD=${MYSQL_DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${CONTAINERS}/bookstack/db:/config
      - ${CONTAINERS}/mariadb/data:/var/lib/mysql
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: library/adminer:latest
    hostname: adminer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      backend:
        ipv4_address: 172.20.1.20
      frontend:
        ipv4_address: 172.20.0.20
    ports:
      - 18080:8080
    volumes:
      - ${CONTAINERS}/adminer:/config
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
<<<<<<< HEAD
=======
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      ADMINER_DEFAULT_SERVER: mariadb
      ADMINER_THEME: Galkaev
>>>>>>> 1fae80d7501c0d702a2a315d17ba5e8d03896c1a

  papermerge:
    image: lscr.io/linuxserver/papermerge
    container_name: papermerge
    hostname: papermerge
    environment:
      - PUID=1000
      - PGID=${PGID}
      - TZ=America/Chicago
      - REDIS_URL=http://192.168.1,125:6379 #optional
    volumes:
      - ${CONTAINERS}/papermerge/appdata/config:/config
      - ${CONTAINERS}/papermerge/appdata/data:/data
    ports:
      - 18006:8000
    restart: unless-stopped  
  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    hostname: dozzle
    restart: unless-stopped
    networks:
      - backend
    security_opt:
      - no-new-privileges:true
    ports:
      - "18888:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
      # DOCKER_HOST: tcp://socket-proxy:2375
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
  
  # Glances - System Information
  glances:
    image: nicolargo/glances:latest
    hostname: glances
    container_name: glances
    restart: unless-stopped
    privileged: true
    # network_mode: host
    networks:
      - backend
    security_opt:
      - no-new-privileges:true
    ports:
      - "61208:61208"
    pid: host
    volumes:
      # - ${CONTAINERS}/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
    environment:
      # GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w"
      # DOCKER_HOST: tcp://socket-proxy:2375
