---
version: "3.6"
services:
  transmission-openvpn:
    image: haugene/transmission-openvpn:latest
    container_name: "transmission"
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun"
    restart: unless-stopped
    networks:
      - transmission-net
    ports:
      - 9091:9091
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONTAINERS}/transmission/config:/config
      - ${DATA}/transmission/data:/data
    environment:
      - PGID=${PGID}
      - PUID=${PUID}          
      - WEBPROXY_ENABLED=true
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_OPTS=--inactive 120 --ping 10 --ping-exit 30
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_DOWNLOAD_DIR=/data/complete
      - GLOBAL_APPLY_PERMISSIONS=false
      - TRANSMISSION_RATIO_LIMIT=1
      - TRANSMISSION_UMASK=022
      - ENABLE_UFW=false
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - CREATE_TUN_DEVICE=true
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONTAINERS}/jackett/config:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - stack-net 
    dns:
      - 1.1.1.1
      - 1.0.0.1
    ports:
      - 9117:9117
    restart: unless-stopped
  
  flaresolverr:
    image: 
    container_name: flaresolverr
    environment: 
      - CAPTCHA_SOLVER=${FLARESOLVERR_CAPTCHA_SOLVER}
      - LOG_LEVEL=${FLARESOLVERR_LOG_LEVEL}
      - LOG_HTML=${FLARESOLVERR_LOG_HTML}
      - PORT=8191
      - TZ=${TZ}
    logging: 
      driver: json-file
      options: 
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
      restart: unless-stopped
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONTAINERS}/flaresolver/storage:/storage

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${CONTAINERS}/sonarr/config:/config
      # - ${MEDIA}/TV:/tv
      - ${DOWNLOADS}/complete:/data/downloads
      # - ${DATA}/sonarr:/data
    networks:
      - stack-net
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - 8989:8989
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${CONTAINERS}/lidarr/config:/config
      # - ${MEDIA}/Music/:/music
      - ${DOWNLOADS}/complete:/data/downloads
      # - ${DATA}/lidarr:/data
    networks:
      - stack-net
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - 8686:8686
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${CONTAINERS}/radarr/config:/config
      # - ${MEDIA}/Movies/:/movies
      - ${DOWNLOADS}/complete:/data/downloads
      # - ${DATA}/radarr:/data
    networks:
      - stack-net
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - 7878:7878
    restart: unless-stopped

  # lazylibrarian:
  #   image: ghcr.io/linuxserver/lazylibrarian
  #   container_name: lazylibrarian
  #   environment:
  #     - PUID=1000
  #     - PGID=100
  #     - TZ=America/Chicago
  #     - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg
  #   volumes:
  #     - ${CONTAINERS}/lazylibrarian/config:/config
  #     - ${DOWNLOADS}/torrents:/data/downloads
  #     # - ${MEDIA}/Books:/books
  #   ports:
  #     - 5299:5299
  #   restart: unless-stopped

  # airsonic:
  #   image: airsonic/airsonic
  #   container_name: airsonic
  #   environment: 
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK_SET=022
  
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8488

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      
  # adguardhome:
  #   image: adguard/adguardhome
  #   container_name: adguard
  #   environment: 
  #     PUID=1000
  #     PGID=100
  #     TZ=America/Chicago
  #   volumes:
  #     - ${APPS}/adguardhome/workdir:/opt/adguardhome/work
  #     - ${CONTAINERS}/adguardhome/confdir:/opt/adguardhome/conf
  #   ports:
  #     - 53:53/tcp 
  #     - 53:53/udp 
  #     - 80:80/tcp 
  #     - 3000:3000/tcp 
  #     - 67:67/udp 
  #     - 68:68/tcp 
  #     - 68:68/udp
  #     - 443:443/tcp
  #     - 853:853/tcp
  #   restart: unless-stopped

  # sabnzbdvpn:
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   container_name: sabnzbdvpn
  #   environment:
  #     - ENABLE_PRIVOXY=true
  #     - LAN_NETWORK=${LAN_NETWORK}
  #     - NAME_SERVERS=${NS1},${NS2}
  #     - PGID=${PGID}
  #     - PUID=${PUID}
  #     - TZ=${TZ}
  #     - VPN_CLIENT=${OPENVPN_CLIENT}
  #     - VPN_ENABLED=true
  #     - VPN_OPTIONS=${VPN_OPTIONS}
  #     - VPN_PASS=${OPENVPN_PASS}
  #     - VPN_PROV=${OPENVPN_PROV}
  #     - VPN_USER=${OPENVPN_USER}
  #   logging:
  #     driver: json-file
  #     options:
  #       max-file: ${DOCKERLOGGING_MAXFILE}
  #       max-size: ${DOCKERLOGGING_MAXSIZE}
  #   restart: unless-stopped
  #   sysctls:
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${CONTAINERS}/sabnzbdvpn/config:/config
  #     - ${STORAGE}:/mnt/storage
  #     - ${OPENVPN_OVPNDIR}:/config/openvpn

  # heimdall:
  #   image: ghcr.io/linuxserver/heimdall
  #   container_name: heimdall
  #   environment: 
  #     - PUID=${PUID}
  #     - PGID=${PUID}
  #     - TZ=America/Chicago
  #   ports:
  #     -82:80
  #     -4443:443
  #   volumes:
  #     - ${CONTAINERS}/heimdall/config:/config

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=America/Chicago
      - JELLYFIN_PUBLISHED_SERVER_URL=192.168.1.125
    #   - FILE__PASSWORD=/run/secrets/jellyfinsecrets
      - JELLYFIN_CONFIG_DIR="/config/app"
      - JELLYFIN_DATA_DIR="/config/app/data"
      - JELLYFIN_LOG_DIR="/config/app/log"
      - JELLYFIN_CACHE_DIR="/config/app/cache"
      - JELLYFIN_TRANSCODE_DIR="/config/app/transcodes"
    volumes:
      - ${CONTAINERS}/jellyfin/config:/config
      - ${DATA}/media/tv:/media/tv
      - ${DATA}/media/movies:/media/movies
      - ${DATA}/media/pictures:/media/pictures
      - ${DATA}/media/Iptv:/media/Iptv
      - /opt/vc/lib:/opt/vc/lib
    ports:
      - 8096:8096
      - 8920:8920
      - 3500:3500 
      - 7359:7359/udp 
      - 1900:1900/udp 
    devices:
      - /dev/dri:/dev/dri
      - /dev/dvb:/dev/dvb
    restart: unless-stopped

  networks:
    transmission-net:
    stack-net:
    media-net:
    
